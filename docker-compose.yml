services:
  serve:
    build:
      context: .
      dockerfile: serve.Dockerfile
    command: ["npm", "run", "serve"]
    volumes:
      - .:/app/src
      - /app/src/node_modules
    ports:
      - 8081:8081
    depends_on:
      dist:
        condition: service_completed_successfully

  dist:
    build:
      context: .
      dockerfile: serve.Dockerfile
    command: ["npm", "run", "dist"]
    volumes:
      - .:/app/src
      - /app/src/node_modules

  build:
    build:
      context: .
      dockerfile: serve.Dockerfile
    command: ["npm", "run", "11ty"]
    volumes:
      - .:/app/src
      - /app/src/node_modules
    depends_on:
      dist:
        condition: service_completed_successfully
    profiles:
      - manual

  dist_clean:
    build:
      context: .
      dockerfile: serve.Dockerfile
    volumes:
      - .:/app/src
    image: node:18-bullseye
    command: ["rm", "-rf", "dist"]
    profiles:
      - manual

  clean:
    build:
      context: .
      dockerfile: serve.Dockerfile
    volumes:
      - .:/app/src
    image: node:18-bullseye
    command: ["rm", "-rf", "_site"]
    profiles:
      - manual

  shell:
    build:
      context: .
      dockerfile: serve.Dockerfile
      target: debug
    command: ["bash"]
    volumes:
      - .:/app/src
      - /app/src/node_modules
    ports:
      - 8081:8081
    stdin_open: true
    tty: true
    profiles:
      - manual

  # Run after build - although in the CI this is run from a tarballed build currently
  http_serve:
    build:
      context: .
      dockerfile: serve.Dockerfile
      target: httpd_serve
    volumes:
      - ./_site:/usr/local/apache2/htdocs/
      - ./.github/scripts/staging/http2.conf:/usr/local/apache2/conf/http2.conf
      - ./htaccess:/usr/local/apache2/htdocs/.htaccess
    ports:
      - 8082:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles:
      - manual

  broken_links:
    build:
      context: ./linkchecker
      dockerfile: Dockerfile
    command: ["/linkchecker/run_linkcheck.sh", "http://http_serve", "/reports"]
    volumes:
      - ./linkchecker:/linkchecker
      - ./link_reports:/reports
    depends_on:
      http_serve:
        condition: service_healthy
    profiles:
      - manual
