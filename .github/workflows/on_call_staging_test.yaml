---
on:
  workflow_call:

jobs:
  staging_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fetch site artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: _site
      - name: extract site artifact
        run: |
          tar -xzf _site.tar.gz

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare staging context  
        run: |
          # Copy staging files into the _site directory for the docker build
          cp .github/scripts/staging/default.conf _site/httpd.conf
          
      - name: Run as service and test
        run: |
          # Start the staging service using docker compose (context will be _site now)
          docker compose up -d --build staging
          
          # Wait for the health check to pass (healthcheck should handle readiness)
          echo "Waiting for service to be ready..."
          timeout 60 bash -c 'until curl -f http://localhost:8080/ >/dev/null 2>&1; do sleep 2; done'
          
          # Perform the tests
          set +e  # Don't exit on error so we can clean up
          exit_code=0
          
          curl -I -f http://localhost:8080/ || exit_code=1
          curl -I -f http://localhost:8080/construction_guide.html || exit_code=1
          curl -I -f http://localhost:8080/wiki/lego || exit_code=1
          
          # Stop the service regardless of test outcome
          docker compose stop staging
          
          # Exit with the test result
          exit $exit_code
